type the<a extends unknown, b extends a> = b
type plus<a extends number, b extends number> = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [41, 42, 43, 44, 45, 46, 47, 48, 49, 50], [42, 43, 44, 45, 46, 47, 48, 49, 50], [43, 44, 45, 46, 47, 48, 49, 50], [44, 45, 46, 47, 48, 49, 50], [45, 46, 47, 48, 49, 50], [46, 47, 48, 49, 50], [47, 48, 49, 50], [48, 49, 50], [49, 50], [50]][a][b]
type record_fix<a extends unknown> = the<unknown, { [key in keyof a]: a[key] }>
type record_empty = the<unknown, { }>
type record_singleton<key extends string, value extends unknown> = the<unknown, { [k in key]: value }>
type record_merge<a extends unknown, b extends unknown> = the<unknown, (a & b)>
type space = the<string, " " | "\n">
type result_unit = the<unknown, ["result-unit-ok", string] | "result-unit-fail">
type result_unit_ok<rest extends string> = the<result_unit, ["result-unit-ok", rest]>
type result_unit_fail = the<result_unit, "result-unit-fail">
type result_string = the<unknown, ["result-string-ok", string, string] | "result-string-fail">
type result_string_ok<value extends string, rest extends string> = the<result_string, ["result-string-ok", value, rest]>
type result_string_fail = the<result_string, "result-string-fail">
type result_type = the<unknown, ["result-type-ok", unknown, string] | "result-type-fail">
type result_type_ok<value extends unknown, rest extends string> = the<result_type, ["result-type-ok", value, rest]>
type result_type_fail = the<result_type, "result-type-fail">
type parse_string<str extends string, s extends string> = the<result_unit, s extends `${str}${(infer s)}` ? result_unit_ok<s> : s extends unknown ? result_unit_fail : never>
type parse_space<s extends string> = the<result_unit, s extends `${space}${(infer s)}` ? parse_space<s> : s extends unknown ? result_unit_ok<s> : never>
type parse_name<s extends string> = the<result_string, s extends `${(infer name)}:${(infer s)}` ? result_string_ok<name, `:${s}`> : s extends unknown ? result_string_fail : never>
type parse_type<s extends string> = the<result_type, s extends `number${(infer s)}` ? result_type_ok<number, s> : s extends `string${(infer s)}` ? result_type_ok<string, s> : s extends `boolean${(infer s)}` ? result_type_ok<boolean, s> : s extends unknown ? parse_record<s> : never>
type parse_field<s extends string> = the<result_type, parse_name<s> extends result_string_fail ? result_type_fail : parse_name<s> extends result_string_ok<the<string, (infer name)>, (infer s)> ? parse_string<": ", s> extends result_unit_fail ? result_type_fail : parse_string<": ", s> extends result_unit_ok<(infer s)> ? parse_type<s> extends result_type_fail ? result_type_fail : parse_type<s> extends result_type_ok<(infer type_), (infer s)> ? result_type_ok<record_singleton<name, type_>, s> : never : never : never>
type parse_fields<s extends string> = the<result_type, parse_field<s> extends result_type_fail ? result_type_ok<record_empty, s> : parse_field<s> extends result_type_ok<(infer field), (infer s)> ? parse_string<",", s> extends result_unit_fail ? result_type_ok<field, s> : parse_string<",", s> extends result_unit_ok<(infer s)> ? parse_space<s> extends result_unit_fail ? result_type_fail : parse_space<s> extends result_unit_ok<(infer s)> ? parse_fields<s> extends result_type_fail ? result_type_fail : parse_fields<s> extends result_type_ok<(infer fields), (infer s)> ? result_type_ok<record_merge<field, fields>, s> : never : never : never : never>
type parse_record<s extends string> = the<result_type, parse_string<"{", s> extends result_unit_fail ? result_type_fail : parse_string<"{", s> extends result_unit_ok<(infer s)> ? parse_space<s> extends result_unit_fail ? result_type_fail : parse_space<s> extends result_unit_ok<(infer s)> ? parse_fields<s> extends result_type_fail ? result_type_fail : parse_fields<s> extends result_type_ok<(infer fields), (infer s)> ? parse_space<s> extends result_unit_fail ? result_type_fail : parse_space<s> extends result_unit_ok<(infer s)> ? parse_string<"}", s> extends result_unit_fail ? result_type_fail : parse_string<"}", s> extends result_unit_ok<(infer s)> ? result_type_ok<record_fix<fields>, s> : never : never : never : never : never>
type run_type_result<result extends result_type> = the<unknown, result extends result_type_ok<(infer value), ""> ? value : result extends unknown ? never : never>
type result_number = the<unknown, run_type_result<parse_type<"number">>>
type result_record = the<unknown, run_type_result<parse_type<`{
  a: number,  e: boolean,
    b: { c: string, d: string   } 
  }`>>>
